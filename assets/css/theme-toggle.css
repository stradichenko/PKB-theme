/* Theme toggle button styling - updated to use consolidated font colors */
:root {
  /* Light mode theme variables now come from variables.css */
}

/* Dark Theme - All theme colors moved to variables.css */
[data-theme="dark"] {
  /* Theme-specific variables moved to variables.css */
}

/* Theme toggle button specific styling */
.theme-toggle {
  position: relative;
  width: var(--spacing-2xl);
  height: var(--spacing-2xl);
  border-radius: 50%;
  background: transparent;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  overflow: hidden;
  color: var(--toggle-btn-color); /* Use theme-specific color */
}

.theme-toggle:hover {
  background-color: var(--toggle-btn-bg-hover);
}

.theme-toggle:focus {
  outline: 2px solid var(--toggle-btn-outline);
  outline-offset: 2px;
}

/* Icon styling */
.theme-toggle .toggle-icon {
  display: block;
  color: inherit;
  width: 24px;
  height: 24px;
}

/* Only add transitions during theme changes initiated by user */
.theme-transition .toggle-icon {
  transition: transform 0.3s ease;
}

.theme-transition .theme-toggle .toggle-icon {
  animation: spin 0.5s ease;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Icon display logic - No transitions initially */
.theme-toggle .sun-icon,
.theme-toggle .moon-icon {
  position: absolute;
  stroke: currentColor; /* Inherit color from parent */
}

/* Add transitions only after page load, when ready for user interaction */
.ready-for-interaction .theme-toggle .sun-icon,
.ready-for-interaction .theme-toggle .moon-icon {
  transition: opacity 0.3s ease, transform 0.5s ease;
}

/* Show sun icon when in dark mode (to switch to light) */
.theme-toggle.dark-mode .sun-icon {
  opacity: 1;
  transform: rotate(0deg) scale(1);
}

.theme-toggle.dark-mode .moon-icon {
  opacity: 0;
  transform: rotate(100deg) scale(0);
}

/* Show moon icon when in light mode (to switch to dark) */
.theme-toggle:not(.dark-mode) .moon-icon {
  opacity: 1;
  transform: rotate(0deg) scale(1);
}

.theme-toggle:not(.dark-mode) .sun-icon {
  opacity: 0;
  transform: rotate(-100deg) scale(0);
}

/* Header social section layout - Fixed positioning */
.header-social {
  display: flex;
  align-items: center;
  margin-left: auto; /* Push to the right side of header */
  gap: 12px; /* Space between elements */
}

.header-social a {
  color: inherit;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Apply base styles using CSS variables */
html, 
body, 
main, 
.content, 
.container, 
article, 
section, 
.layout-container, 
.main-content, 
site-main, 
div[class^="content"] {
  background-color: var(--theme-bg);
  color: var(--theme-text);
}

/* Typography overrides */
h1, h2, h3, h4, h5, h6 {
  color: var(--text-color-heading);
}

p, li, span, div {
  color: var(--text-color-body);
}

a {
  color: var(--text-color-link);
}

a:hover, a:focus {
  color: var(--text-color-link-hover);
}

.text-muted {
  color: var(--text-color-muted) !important;
}
