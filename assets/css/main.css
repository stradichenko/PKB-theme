/* ===== VARIABLES - Import specific variable files ===== */
@import 'global/variables/core.css';
@import 'global/variables/typography.css';
@import 'global/variables/layout.css';
@import 'global/variables/components.css';

/* ===== RESET - Inline from global/reset.css ===== */
/* ...existing reset code from reset.css... */

/* ===== LAYOUT STYLES ===== */
/* Header styles - inline from header.css */
/* ...existing header code... */

/* Footer styles - inline from footer.css */
/* ...existing footer code... */

/* Body styles - inline from body.css */
/* ...existing body code... */

/* ===== COMPONENT STYLES ===== */
/* Search styles - inline from search.css */
/* ...existing search code... */

/* List styles - inline from list.css */
/* ...existing list code... */

/* TOC styles - inline from components/toc.css */
/* ...existing toc code... */

/* Table styles - inline from components/table.css */
/* ...existing table code... */

/* Code styles - inline from components/code.css */
/* ...existing code code... */

/* PDF Print styles - inline from components/pdf-print.css */
/* ...existing pdf-print code... */

/* GoAT Diagrams */
@import "components/goat-diagrams.css";

/* ===== REMAINING STYLES ===== */
/* General styling */
a {
  color: var(--link-color);
  text-decoration: none;
}

/* Sticky footer setup */
html {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 0;
  padding: 0;
}

/* The main element serves as:
   1. Primary content container
   2. Flex item that grows to fill available space
   3. Styled area with consistent background/padding
   4. Part of sticky footer layout system */
main {
  flex: 1 0 auto;  /* Grow to fill space, don't shrink, no initial size */
  background-color: var(--main-bg-color);  /* Theme-aware background */
  padding: var(--main-padding);  /* Consistent content spacing */
  color: var(--main-text-color);  /* Theme-aware text color */
}

footer {
  flex-shrink: 0;
  width: 100%;
  margin-top: auto;
}

main, .content {
  flex: 1;
}

/* Update TOC toggle color to use variable */
.toc-toggle {
  color: var(--color-primary);
}

/* Text selection highlight styles with semantic colors */
html body *::selection,
*:not(html):not(body)::selection,
p::selection,
h1::selection,
h2::selection,
h3::selection,
h4::selection,
h5::selection,
h6::selection,
li::selection,
span::selection,
div::selection,
a::selection {
  background-color: var(--color-primary) !important;
  color: var(--text-color-inverse) !important;
  text-shadow: none !important;
}

html body *::-moz-selection,
*:not(html):not(body)::-moz-selection,
p::-moz-selection,
h1::-moz-selection,
h2::-moz-selection,
h3::-moz-selection,
h4::-moz-selection,
h5::-moz-selection,
h6::-moz-selection,
li::-moz-selection,
span::-moz-selection,
div::-moz-selection,
a::-moz-selection {
  background-color: var(--color-primary) !important;
  color: var(--text-color-inverse) !important;
  text-shadow: none !important;
}

/* Dark mode selection - Target all elements directly */
html[data-theme="dark"] *::selection {
  background-color: var(--color-primary) !important;
  color: var(--color-text-primary) !important;
}

html[data-theme="dark"] *::-moz-selection {
  background-color: var(--color-primary) !important;
  color: var(--color-text-primary) !important;
}

/* Use semantic error color for code selection */
code::selection,
pre *::selection,
.code *::selection,
html code::selection {
  background-color: var(--color-secondary) !important;
  color: var(--text-color-inverse) !important;
}

code::-moz-selection,
pre *::-moz-selection,
.code *::-moz-selection,
html code::-moz-selection {
  background-color: var(--color-secondary) !important;
  color: var(--text-color-inverse) !important;
}

/* Global scrollbar styling - applies to all scrollable elements */
*::-webkit-scrollbar {
  width: var(--scrollbar-width); /* Use variable instead of hardcoded 8px */
  height: var(--scrollbar-height); /* Use variable instead of hardcoded 8px */
  position: absolute; /* Force overlay positioning */
}

*::-webkit-scrollbar-track {
  background: transparent; /* Always transparent track */
}

*::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb-bg); /* Always present but may be transparent */
  border-radius: 4px;
  opacity: 0.2; /* Lower default opacity */
  transition: opacity 0.15s ease; /* Faster transition */
}

*::-webkit-scrollbar-thumb:hover {
  background-color: var(--scrollbar-thumb-hover-bg);
  opacity: 0.8; /* More visible on hover */
}

/* Remove scrollbar arrows/buttons for Chromium browsers */
*::-webkit-scrollbar-button {
  display: none; /* Completely remove up/down arrows */
  width: 0;
  height: 0;
}

*::-webkit-scrollbar-corner {
  background: transparent; /* Transparent corner where scrollbars meet */
}

/* Firefox scrollbar styling */
* {
  scrollbar-width: thin; /* Always show thin scrollbar */
  scrollbar-color: transparent transparent; /* Transparent by default */
  transition: scrollbar-color 0.15s ease; /* Faster transition */
}

/* Show Firefox scrollbar when scrolling */
*.scrolling {
  scrollbar-color: var(--scrollbar-thumb-bg) transparent;
}

/* Fade Firefox scrollbar when inactive */
*.scrolling-fade {
  scrollbar-color: rgba(var(--color-primary-rgb), 0.1) transparent; /* Very transparent */
}

/* Thin scrollbar variant for specific elements */
.scrollbar-thin::-webkit-scrollbar {
  width: var(--scrollbar-thin-width); /* Even thinner variant */
  height: var(--scrollbar-thin-height);
  position: absolute; /* Force overlay positioning */
}

.scrollbar-thin::-webkit-scrollbar-track {
  background: transparent;
}

.scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb-bg);
  border-radius: var(--scrollbar-border-radius);
  opacity: 0.2; /* Lower default opacity */
  transition: opacity 0.15s ease; /* Faster transition */
}

.scrollbar-thin::-webkit-scrollbar-button {
  display: none;
  width: 0;
  height: 0;
}

.scrollbar-thin::-webkit-scrollbar-thumb:hover,
.scrollbar-thin.scrolling::-webkit-scrollbar-thumb {
  opacity: 0.7; /* More visible when active */
}

.scrollbar-thin.scrolling-fade::-webkit-scrollbar-thumb {
  opacity: 0.1; /* Very transparent when inactive */
}

/* Override for specific components that need always-visible scrollbars */
.scrollbar-always-visible::-webkit-scrollbar {
  position: absolute; /* Force overlay positioning */
}

.scrollbar-always-visible::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb-bg);
  opacity: 0.5; /* Always somewhat visible */
}

.scrollbar-always-visible::-webkit-scrollbar-button {
  display: none;
  width: 0;
  height: 0;
}

.scrollbar-always-visible {
  scrollbar-width: thin;
  scrollbar-color: var(--scrollbar-thumb-bg) transparent;
}

/* Force overlay behavior for all scrollable elements */
*[style*="overflow"] {
  scrollbar-gutter: stable both-edges; /* Prevent layout shift */
}
